Determining if the system is big endian passed with the following output:
Change Dir: /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec/fast"
/usr/bin/make -f CMakeFiles/cmTryCompileExec.dir/build.make CMakeFiles/cmTryCompileExec.dir/build
make[1]: Entering directory `/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp'
/usr/bin/cmake -E cmake_progress_report /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec.dir/TestEndianess.c.o
/usr/bin/gcc    -o CMakeFiles/cmTryCompileExec.dir/TestEndianess.c.o   -c /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/TestEndianess.c
Linking C executable cmTryCompileExec
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec.dir/link.txt --verbose=1
/usr/bin/gcc         CMakeFiles/cmTryCompileExec.dir/TestEndianess.c.o  -o cmTryCompileExec -rdynamic 
make[1]: Leaving directory `/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp'

TestEndianess.c:
/* A 16 bit integer is required. */
typedef unsigned short cmakeint16;

/* On a little endian machine, these 16bit ints will give "THIS IS LITTLE ENDIAN."
   On a big endian machine the characters will be exchanged pairwise. */
const cmakeint16 info_little[] =  {0x4854, 0x5349, 0x4920, 0x2053, 0x494c, 0x5454, 0x454c, 0x4520, 0x444e, 0x4149, 0x2e4e, 0x0000};

/* on a big endian machine, these 16bit ints will give "THIS IS BIG ENDIAN."
   On a little endian machine the characters will be exchanged pairwise. */
const cmakeint16 info_big[] =     {0x5448, 0x4953, 0x2049, 0x5320, 0x4249, 0x4720, 0x454e, 0x4449, 0x414e, 0x2e2e, 0x0000};

#ifdef __CLASSIC_C__
int main(argc, argv) int argc; char *argv[];
#else
int main(int argc, char *argv[])
#endif
{
  int require = 0;
  require += info_little[argc];
  require += info_big[argc];
  (void)argv;
  return require;
}


Determining if the function pthread_create exists in the pthreads failed with the following output:
Change Dir: /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec/fast"
/usr/bin/make -f CMakeFiles/cmTryCompileExec.dir/build.make CMakeFiles/cmTryCompileExec.dir/build
make[1]: Entering directory `/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp'
/usr/bin/cmake -E cmake_progress_report /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -Wall  -DCHECK_FUNCTION_EXISTS=pthread_create   -o CMakeFiles/cmTryCompileExec.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-2.8/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec.dir/link.txt --verbose=1
/usr/bin/gcc   -Wall  -DCHECK_FUNCTION_EXISTS=pthread_create    CMakeFiles/cmTryCompileExec.dir/CheckFunctionExists.c.o  -o cmTryCompileExec -rdynamic -lpthreads 
/usr/make[1]: Leaving directory `/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp'
bin/ld: cannot find -lpthreads
collect2: ld returned 1 exit status
make[1]: *** [cmTryCompileExec] Error 1
make: *** [cmTryCompileExec/fast] Error 2


Determining if the Q_WS_WIN exist failed with the following output:
Change Dir: /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec/fast"
/usr/bin/make -f CMakeFiles/cmTryCompileExec.dir/build.make CMakeFiles/cmTryCompileExec.dir/build
make[1]: Entering directory `/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp'
/usr/bin/cmake -E cmake_progress_report /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -I/usr/include/qt4    -o CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.c.o   -c /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:25: error: ‘Q_WS_WIN’ undeclared (first use in this function)
/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:25: note: each undeclared identifier is reported only once for each function it appears in
make[1]: Leaving directory `/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp'
make[1]: *** [CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.c.o] Error 1
make: *** [cmTryCompileExec/fast] Error 2

File /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <QtCore/qglobal.h>

void cmakeRequireSymbol(int dummy,...){(void)dummy;}
int main()
{
#ifndef Q_WS_WIN
  cmakeRequireSymbol(0,&Q_WS_WIN);
#endif
  return 0;
}

Determining if the Q_WS_QWS exist failed with the following output:
Change Dir: /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec/fast"
/usr/bin/make -f CMakeFiles/cmTryCompileExec.dir/build.make CMakeFiles/cmTryCompileExec.dir/build
make[1]: Entering directory `/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp'
/usr/bin/cmake -E cmake_progress_report /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -I/usr/include/qt4    -o CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.c.o   -c /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:25: error: ‘Q_WS_QWS’ undeclared (first use in this function)
/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:25: note: each undeclared identifier is reported only once for each function it appears in
make[1]: Leaving directory `/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp'
make[1]: *** [CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.c.o] Error 1
make: *** [cmTryCompileExec/fast] Error 2

File /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <QtCore/qglobal.h>

void cmakeRequireSymbol(int dummy,...){(void)dummy;}
int main()
{
#ifndef Q_WS_QWS
  cmakeRequireSymbol(0,&Q_WS_QWS);
#endif
  return 0;
}

Determining if the Q_WS_MAC exist failed with the following output:
Change Dir: /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec/fast"
/usr/bin/make -f CMakeFiles/cmTryCompileExec.dir/build.make CMakeFiles/cmTryCompileExec.dir/build
make[1]: Entering directory `/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp'
/usr/bin/cmake -E cmake_progress_report /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -I/usr/include/qt4    -o CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.c.o   -c /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:25: error: ‘Q_WS_MAC’ undeclared (first use in this function)
/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:25: note: each undeclared identifier is reported only once for each function it appears in
make[1]: Leaving directory `/home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp'
make[1]: *** [CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.c.o] Error 1
make: *** [cmTryCompileExec/fast] Error 2

File /home/dai/Turtlebot/RGBDemo-0.7.0-Source/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <QtCore/qglobal.h>

void cmakeRequireSymbol(int dummy,...){(void)dummy;}
int main()
{
#ifndef Q_WS_MAC
  cmakeRequireSymbol(0,&Q_WS_MAC);
#endif
  return 0;
}

